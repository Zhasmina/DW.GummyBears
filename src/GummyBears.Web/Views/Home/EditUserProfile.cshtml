@model GummyBears.Web.Models.TokenResponse<GummyBears.Contracts.UserProfile>

<!--/sidebar-menu-->
<div class="sidebar-menu">
    <header class="logo1">
        <div class="menu" style="margin-top: 20px;">
            <a href="@Url.Action("GetUserProfile", "Home", new { token = Model.Token, userId = Model.Payload.Id, username = Model.Payload.UserName })" style="font-size: 25px; padding-top: 2em;"><i class="fa fa-user"></i> <span>@Model.Username</span></a>
        </div>
    </header>
    <div style="border-top:1px ridge rgba(255, 255, 255, 0.15)"></div>
    <div class="menu">
        <ul id="menu">
            <li><a href="@Url.Action("GetUserProfile", "Home", new { token = Model.Token, userId = Model.Payload.Id, username = Model.Payload.UserName })"><i class="fa fa-user"></i> <span>My Profile</span></a></li>
            <li><a href="@Url.Action("GetFeeds", "Home", new { token = Model.Token, userId = Model.Payload.Id, username = Model.Payload.UserName })"><i class="fa fa-rss-square"></i> <span>Feeds</span></a></li>
            <li><a href="@Url.Action("GetGroups", "Home", new { token = Model.Token, userId = Model.Payload.Id, username = Model.Payload.UserName  })"><i class="fa fa-users"></i> <span>My Groups</span></a></li>
            <li><a href="@Url.Action("GetUserCreations", "Home", new { token = Model.Token, userId = Model.Payload.Id, username = Model.Payload.UserName })"><i class="fa fa-briefcase"></i> <span>My Creations</span></a></li>
            <li><a href="@Url.Action( "Logout", "Home", new { token = Model })"><i class="fa fa-sign-out"></i> <span>Logout</span></a></li>
        </ul>
    </div>
</div>

<div class="content">
    <h2>My Profile</h2>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Payload.Id)
            @Html.Hidden("username", Model.Payload.UserName)
            @Html.Hidden("email", Model.Payload.Email)
            <div class="form-group">
                @Html.LabelFor(model => model.Payload.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Payload.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Payload.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Payload.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Payload.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Payload.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Payload.TelephoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Payload.TelephoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Payload.TelephoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Payload.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Payload.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Payload.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Payload.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Payload.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Payload.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Payload.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Payload.Country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Payload.Country, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>