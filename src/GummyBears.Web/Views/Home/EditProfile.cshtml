@model GummyBears.Web.Models.TokenResponse<GummyBears.Contracts.UserProfile>

@{
    ViewBag.Title = "EditProfile";
}
@{
    Layout = "~/Views/Shared/_AuthenticatedLayout.cshtml";
}
 <!--/sidebar-menu-->
<div class="sidebar-menu">
    <header class="logo1">
    <img src="~/img/user-profile.png" style="max-width:170px;" />
        <div class="menu" style="margin-top: 20px;">
            <a href="@Url.Action("GetUserProfile", "Home", new { token = Model.Token, userId = Model.Payload.Id, username = Model.Payload.UserName })" style="font-size: 25px; padding-top: 2em;"><i class="fa fa-user"></i> <span>@Model.Username</span></a>
        </div>
    </header>
    <div style="border-top:1px ridge rgba(255, 255, 255, 0.15)"></div>
    <div class="menu">
        <ul id="menu">
            <li><a href="@Url.Action("GetUserProfile", "Home", new { token = Model.Token, userId = Model.Payload.Id, username = Model.Payload.UserName })"><i class="fa fa-user"></i> <span>My Profile</span></a></li>
            <li><a href="@Url.Action("GetFeeds", "Home", new { token = Model.Token, userId = Model.Payload.Id, username = Model.Payload.UserName })"><i class="fa fa-rss-square"></i> <span>Feeds</span></a></li>
            <li><a href="@Url.Action("GetGroups", "Home", new { token = Model.Token, userId = Model.Payload.Id, username = Model.Payload.UserName  })"><i class="fa fa-users"></i> <span>My Groups</span></a></li>
            <li><a href="@Url.Action("GetUserCreations", "Home", new { token = Model.Token, userId = Model.Payload.Id, username = Model.Payload.UserName })"><i class="fa fa-briefcase"></i> <span>My Creations</span></a></li>
        </ul>
    </div>
</div>
<div class="content">
    <h2>Profile Info</h2>
    <div>
      <hr />
        <dl class="dl-horizontal">
            <dt>
                @if (!string.IsNullOrEmpty(Model.Payload.ProfilePicturePath))
                {
                    <img src="@Model.Payload.ProfilePicturePath" />
                }
            </dt>
            <dd>
                <a href="@Url.Action("EditUserProfile", "Home", new { userProfile = Model.Payload })"><i class="fa fa-pencil"></i><span>Edit</span></a>
            </dd>
            <dt>
                @Html.Label("Username")
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Payload.UserName)
            </dd>

            <dt>
                @Html.Label("First Name")
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Payload.FirstName)
            </dd>

            <dt>
                @Html.Label("Last Name")
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Payload.LastName)
            </dd>

            <dt>
                @Html.Label("Email")
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Payload.Email)
            </dd>

            <dt>
                @Html.Label("Phone Number")
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Payload.TelephoneNumber)
            </dd>

            <dt>
                @Html.Label("Date of birth")
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Payload.DateOfBirth)
            </dd>

            <dt>
                @Html.Label("Description")
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Payload.Description)
            </dd>

            <dt>
                @Html.Label("Country")
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Payload.Country)
            </dd>
        </dl>
        @Html.HiddenFor(model => model.Token)
    </div>
</div>